<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ping.mapper.AdminProductMapper">
    <resultMap type="Product" id="BaseProduct">
	   <!-- column代表数据库表字段， property代表实体类的属性-->
       <id column="pid" property="pid"/>
       <result column="pname" property="pname"/>
       <result column="market_price" property="market_price"/>
       <result column="shop_price" property="shop_price"/>
       <result column="pimage" property="pimage"/>
       <result column="pdate" property="pdate"/>
       <result column="is_hot" property="is_hot"/>
       <result column="pdesc" property="pdesc"/>
       <result column="pflag" property="pflag"/>
       <result column="stock" property="stock"/>
       <result column="volume" property="volume"/>
       <!-- 多对一 -->
       <!--column:指外键值， property: 指的是属性的值, javaType：指的是属性的类型-->
       <association column="cid" property="category" javaType="Category">
            <id column="cid" property="cid"/>
            <result column="cname" property="cname"/>
       </association>
	</resultMap>
	
	<select id="findProductByVolume" parameterType="java.lang.Integer" resultMap="BaseProduct">
		select * from product where pflag &gt; 0 order by volume desc limit #{0}
	</select>
	
	<!-- 根据商品名称查询 -->
	<select id="findProductLikeName" parameterType="java.lang.String" resultMap="BaseProduct">
		select * from product p join category c ON p.cid=c.cid  where p.pname like '%${value}%' order by pid 
	</select>
	<!-- 查询所有商品信息 -->
	<select id="findAll" resultMap="BaseProduct">
		select * from product p join category c ON p.cid=c.cid   order by pid 
	</select>
	
	 <!-- 商品上架，通过商品pid更新商品信息，让pflag=1表示商品上架 -->
   <update id="updatePublishProductInfoByPid" parameterType="Integer">
      update product set pflag=1 where pid=#{pid}
   </update>
   
   <!-- 商品下架，通过商品pid更新商品信息，让pflag=0表示商品下架 -->
   <update id="updateUnpublishProductInfoByPid" parameterType="Integer">
      update product set pflag=0 where pid=#{pid}
   </update>
   
   <!-- 添加商品 -->
   <insert id="saveProduct" parameterType="Product">
	  insert into product(pname,market_price,shop_price,pimage,pdate,is_hot,pdesc,pflag,cid,stock,volume) 
      values(#{pname},#{market_price},#{shop_price},#{pimage},#{pdate},#{is_hot},#{pdesc},#{pflag},#{category.cid},#{stock},#{volume})
	</insert>
	
	<!-- 管理员删除商品，通过pid进行删除 -->
   <delete id="deleteProduct" parameterType="Integer">
      delete from product where pid=#{pid}
   </delete>
   
   <update id="updateProduct" parameterType="Product">
		update product
		<set>
			<if test="pname!=null and pname!=''">
				pname=#{pname},
			</if>
			<if test="market_price!=null and market_price!=''">
				market_price=#{market_price},
			</if>
			<if test="shop_price!=null and shop_price!='' ">
				shop_price=#{shop_price},
			</if>
			<if test="category!=null and category.cid!=null">
				cid=#{category.cid},
			</if>
			<if test="pimage!=null and  pimage!=''">
				pimage=#{pimage},
			</if>
			<if test="pdate!=null">
				pdate=#{pdate},
			</if>
			<if test="is_hot!=null">
				is_hot=#{is_hot},
			</if>
			<if test="pdesc!=null">
				pdesc=#{pdesc},
			</if>
			<if test="pflag!=null">
				pflag=#{pflag}
			</if>
			<if test="stock!=null">
				stock=#{stock}
			</if>
			<if test="volume!=null">
				volume=#{volume}
			</if>
		</set>
		where pid=#{pid}
	</update>
</mapper>